{"version":3,"sources":["pipeline-express.jpg","App.js","index.js"],"names":["myAlgoWallet","Pipeline","init","App","Component","constructor","props","super","inputRecipient","event","this","setState","recipient","target","value","inputAmount","amount","inputNote","note","handleCheckChange","main","state","myAddress","txID","render","align","class","alt","src","logo","width","className","name","type","checked","onChange","wallet","context","returnTo","index","ReactDOM","document","getElementById"],"mappings":"2bAAe,MAA0B,6C,OCKzC,MAAMA,EAAeC,IAASC,OAC9B,MAAMC,UAAYC,YAEhBC,YAAYC,GACVC,MAAMD,GADW,KAYnBE,eAAkBC,IAChBC,KAAKC,SAAS,CAAEC,UAAWH,EAAMI,OAAOC,SAbvB,KAgBnBC,YAAeN,IACbC,KAAKC,SAAS,CAACK,OAAQP,EAAMI,OAAOC,SAjBnB,KAoBnBG,UAAaR,IACXC,KAAKC,SAAS,CAACO,KAAMT,EAAMI,OAAOC,SArBjB,KAwBnBK,kBAAoB,KACpBT,KAAKC,SAAS,CAACS,MAAQV,KAAKW,MAAMD,OAAO,IAAMnB,IAASmB,KAAOV,KAAKW,MAAMD,QAvBxEV,KAAKW,MAAQ,CACXD,MAAM,EACNE,UAAW,GACXV,UAAW,GACXI,OAAQ,EACRE,KAAM,GACNK,KAAM,IAsBVC,SACE,OAAO,sBAAKC,MAAM,SAASC,MAAM,OAA1B,UACP,qBAAKC,IAAI,mBAAmBC,IAAKC,EAAMC,MAAM,QAAY,uBACzD,sBAAKJ,MAAM,gBAAX,UACA,0CAGF,uBACIK,UAAU,mBACVC,KAAK,UACLC,KAAK,WACLC,QAASxB,KAAKW,MAAMD,KACpBe,SAAUzB,KAAKS,uBAEf,cAAC,IAAD,CAAYiB,OAAQpC,EAAcqC,QAAS3B,KAAM4B,SAAU,cAC3D,6BAAK,eAAiB5B,KAAKW,MAAMC,YACjC,iCACE,wBAAOI,MAAO,aAAd,uBAEE,uBAAOO,KAAK,OAAOP,MAAM,eAAeS,SAAUzB,KAAKF,oBACjD,uBACR,wBAAOkB,MAAM,aAAb,oBAEE,uBAAOO,KAAK,SAASP,MAAM,eAAeS,SAAUzB,KAAKK,iBAE3D,wBAAOW,MAAM,aAAb,UAA0B,uBAA1B,QAEE,uBAAOO,KAAK,OAAOP,MAAM,eAAeS,SAAUzB,KAAKO,kBAG3D,cAAC,IAAD,CACAsB,MAAO,EACP3B,UAAWF,KAAKW,MAAMT,UACtBI,OAAQN,KAAKW,MAAML,OACnBE,KAAMR,KAAKW,MAAMH,KACjBI,UAAWZ,KAAKW,MAAMC,UACtBc,OAAQpC,EACRqC,QAAS3B,KACT4B,SAAU,SAEV,6BAAK,mBAAqB5B,KAAKW,MAAME,WAK5BpB,QC7EfqC,IAAShB,OAAO,cAAC,EAAD,IAASiB,SAASC,eAAe,U","file":"static/js/main.b7fff393.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/pipeline-express.1dec43b1.jpg\";","import React, {Component} from 'react'\r\nimport { AlgoButton, AlgoSendButton, Pipeline} from 'pipeline-express-react'\r\nimport './index.css'\r\nimport logo from './pipeline-express.jpg'\r\n\r\nconst myAlgoWallet = Pipeline.init();\r\nclass App extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      main: true,\r\n      myAddress: \"\",\r\n      recipient: \"\",\r\n      amount: 0,\r\n      note: \"\",\r\n      txID: \"\"\r\n    }\r\n  }\r\n\r\n  inputRecipient = (event) => {\r\n    this.setState({ recipient: event.target.value });\r\n  }\r\n\r\n  inputAmount = (event) => {\r\n    this.setState({amount: event.target.value});\r\n  }\r\n\r\n  inputNote = (event) => {\r\n    this.setState({note: event.target.value});\r\n  }\r\n\r\n  handleCheckChange = () => {\r\n  this.setState({main: ! this.state.main}, () => Pipeline.main = this.state.main)\r\n\r\n  }\r\n\r\n\r\n  render() {\r\n    return <div align=\"center\" class=\"card\">    \r\n    <img alt=\"Pipeline Express\" src={logo} width=\"300\"></img><br></br>\r\n    <div class=\"toggle-select\">\r\n    <h5>\r\n    MainNet:\r\n  </h5>\r\n  <input\r\n      className=\"form-check-input\"\r\n      name=\"mainnet\" \r\n      type=\"checkbox\"\r\n      checked={this.state.main}\r\n      onChange={this.handleCheckChange} />\r\n  </div>            \r\n      <AlgoButton wallet={myAlgoWallet} context={this} returnTo={\"myAddress\"} />\r\n      <h3>{\"My Address: \" + this.state.myAddress}</h3>\r\n      <form >\r\n        <label class= \"form-label\">\r\n          Recipient:\r\n          <input type=\"text\" class=\"form-control\" onChange={this.inputRecipient} />\r\n        </label><br></br>\r\n        <label class=\"form-label\">\r\n          Amount:\r\n          <input type=\"number\" class=\"form-control\" onChange={this.inputAmount} />\r\n        </label>\r\n        <label class=\"form-label\"><br></br>\r\n          Note:\r\n          <input type=\"text\" class=\"form-control\" onChange={this.inputNote} />\r\n        </label>\r\n      </form>\r\n      <AlgoSendButton\r\n      index={0} //If ASA, must be a numeric index value !== 0\r\n      recipient={this.state.recipient} //string value\r\n      amount={this.state.amount} //integer value in micro Algos\r\n      note={this.state.note} //string value\r\n      myAddress={this.state.myAddress} //string value\r\n      wallet={myAlgoWallet} //reference to an instance of Pipeline.init(); that is called once when the app is initialized\r\n      context={this}\r\n      returnTo={\"txID\"}// string value of state key to return the transaction id\r\n      />\r\n      <h3>{\"Transaction ID: \" + this.state.txID}</h3>\r\n</div>\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import './index.css'\r\n\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}